function FrontBase(){}function Auth(){var t=this;t.maskWrapper=$(".mask-wrapper"),t.scrollWrapper=$(".scroll-wrapper"),t.smsCaptcha=$(".sms-captcha-btn")}FrontBase.prototype.listenAuthBoxHover=function(){var t=$(".auth-box"),e=$(".user-more-box");t.hover(function(){e.show()},function(){e.hide()})},FrontBase.prototype.run=function(){this.listenAuthBoxHover()},Auth.prototype.run=function(){var t=this;t.listenSHEvent(),t.listenSwitchEvent(),t.listenLoginEvent(),t.listenImgCaptchaEvent(),t.listenSmsCaptchaEvent(),t.listenRegistEvent()},Auth.prototype.showEvent=function(){this.maskWrapper.show()},Auth.prototype.hideEvent=function(){this.maskWrapper.hide()},Auth.prototype.listenSHEvent=function(){var t=this,e=$(".login-btn"),n=$(".regist-btn"),s=$(".close-btn");e.click(function(){t.scrollWrapper.css({left:0}),t.showEvent()}),n.click(function(){t.scrollWrapper.css({left:-400}),t.showEvent()}),s.click(function(){t.hideEvent()})},Auth.prototype.listenSwitchEvent=function(){var e=this;$(".switch").click(function(){var t=e.scrollWrapper.css("left");(t=parseInt(t))<0?e.scrollWrapper.animate({left:"0"}):e.scrollWrapper.animate({left:"-400px"})})},Auth.prototype.listenImgCaptchaEvent=function(){var t=$(".img-captcha");t.click(function(){t.attr("src","/account/img_captcha?random="+Math.random())})},Auth.prototype.listenLoginEvent=function(){var s=this,a=$('.signin-group input[name="telephone"]'),o=$('.signin-group input[name="password"]'),i=$('.signin-group input[name="remember"]');$(".signin-group .submit-btn").click(function(){var t=a.val(),e=o.val(),n=i.prop("checked");myajax.post({url:"/account/login/",data:{telephone:t,password:e,remember:n?1:0},success:function(t){s.hideEvent(),messageBox.showSuccess("登录成功",function(){setTimeout(window.location.reload())})}})})},Auth.prototype.listenRegistEvent=function(){$(".signup-group .submit-btn").click(function(t){console.log("click"),t.preventDefault();var e=$('.signup-group input[name="telephone"]'),n=$('.signup-group input[name="username"]'),s=$('.signup-group input[name="img_captcha"]'),a=$('.signup-group input[name="password1"]'),o=$('.signup-group input[name="password2"]'),i=$('.signup-group input[name="sms_captcha"]'),c=e.val(),r=n.val(),p=s.val(),u=a.val(),l=o.val(),h=i.val();myajax.post({url:"account/regist/",data:{telephone:c,username:r,img_captcha:p,password1:u,password2:l,sms_captcha:h},success:function(t){200==t.code&&window.location.reload()}})})},Auth.prototype.smsSuccessEvent=function(){var t=this;messageBox.showSuccess("验证码已发送，请注意查收！"),t.smsCaptcha.unbind(),t.smsCaptcha.addClass("disabled");var e=60,n=setInterval(function(){t.smsCaptcha.text(e+"s"),0==e&&(clearInterval(n),t.smsCaptcha.removeClass("disable"),t.smsCaptcha.text("发送验证码"),t.listenSmsCaptchaEvent()),e--},1e3)},Auth.prototype.listenSmsCaptchaEvent=function(){var e=this;e.smsCaptcha.click(function(){var t=$('.signup-group input[name="telephone"]').val();t?myajax.get({url:"/account/sms_captcha/",data:{telephone:t},success:function(t){200==t.code&&e.smsSuccessEvent()}}):messageBox.showError("请输入手机号码！")})},$(function(){(new Auth).run(),(new FrontBase).run()}),$(function(){window.template?template.defaults.imports.dateFormat=function(t){var e=new Date(t),n=e.getTime(),s=((new Date).getTime()-n)/1e3;return s<60?"刚刚":60<=s&&s<3600?parseInt(s/60)+"分钟前":3600<=s&&s<86400?parseInt(s/60/60)+"小时前":86400<=s&&s<2592e3?parseInt(s/60/60/24)+"天前":e.getFullYear()+"/"+e.getMonth()+"/"+e.getDate()+" "+e.getHours()+":"+e.getMinutes()+":"+e.getSeconds()}:console.log("arttemplate出错")});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
